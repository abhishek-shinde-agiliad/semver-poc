name: POC

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract Git Information
        id: sha_key
        run: echo "::set-output name=sha_key::$(git rev-parse --short HEAD)"

      - name: Set Date Timestamp
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"

      - name: Set Semantic Version
        id: semver
        run: echo "::set-output name=semver::$(cat pom.xml | grep '<version>' | head -n1 | sed 's/.*<version>\(.*\)<\/version>.*/\1/')"

      - name: Generate Version Information
        id: version
        run: echo "::set-output name=version::$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
      
      # - name: Semantic Release dry run
      #   id: semantic      
      #   run: |
      #     OUTPUT=$(unset GITHUB_ACTIONS && npx semantic-release --dry-run --no-ci --branches "${{ github.head_ref }}")
      #     VERSION=$(echo "$OUTPUT" | grep -o "The next release version is [0-9]*\.[0-9]*\.[0-9]*" | awk '{print $6}')
      #     echo "::set-output name=version::$VERSION"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Show Version
        run: | 
          echo "sha_key is ${{ steps.sha_key.outputs.sha_key }}"
          echo "date is ${{ steps.date.outputs.date }}"
          echo "semver is ${{ steps.semver.outputs.semver }}"
          echo "version is ${{ steps.version.outputs.version }}"

      - name: Build Docker image
        run: |
          docker build --build-arg VERSION="${{ steps.semver.outputs.semver }}" --build-arg DATE_TIMESTAMP="${{ steps.date.outputs.date }}" --build-arg SHA_KEY="${{ steps.sha_key.outputs.sha_key }}" -t poc:latest .
          docker tag poc:latest poc:${{ steps.sha_key.outputs.sha_key }}
          docker tag poc:latest poc:${{ steps.semver.outputs.semver }}-${{ steps.date.outputs.date }}-${{ steps.sha_key.outputs.sha_key }}
          docker tag poc:latest docker push poc:${{ steps.semver.outputs.semver }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Push and save Docker image
        run: |
          docker push poc:latest
          docker push poc:${{ steps.sha_key.outputs.sha_key }}
          docker push poc:${{ steps.semver.outputs.semver }}-${{ steps.date.outputs.date }}-${{ steps.sha_key.outputs.sha_key }}
          docker push poc:${{ steps.semver.outputs.semver }}
          docker save -o /tmp/poc-${{ steps.semver.outputs.semver }}-${{ steps.date.outputs.date }}-${{ steps.sha_key.outputs.sha_key }}.tar.gz poc:latest
          
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.semver.outputs.semver }}
          release_name: Release ${{ steps.semver.outputs.semver }}
          body: |
            Release ${{ steps.semver.outputs.semver }}
          commit : Release ${{ steps.semver.outputs.semver }}
          draft: false
          prerelease: false
          
      - name: Upload Docker image to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/poc-${{ steps.semver.outputs.semver }}-${{ steps.date.outputs.date }}-${{ steps.sha_key.outputs.sha_key }}.tar.gz
          asset_name: poc-${{ steps.semver.outputs.semver }}-${{ steps.date.outputs.date }}-${{ steps.sha_key.outputs.sha_key }}.tar.gz
          asset_content_type: application/gzip
